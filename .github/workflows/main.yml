# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths:
      - 'Makefile'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.16
          # Whether to download only stable versions
          stable: # optional, default is true
          # Used to pull node distributions from go-versions.  Since there's a default, this is typically not supplied by the user.
          token: # optional, default is ${{ github.token }}


      # Runs a set of commands using the runners shell
      - name: Run make release
        run: make release

      # Show docker images
      - name: List images
        run: docker images

      # Docker login
      - name: docker login
        #run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }}  --password-stdin
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }}  -p ${{ secrets.DOCKERHUB_PASSWORD }}

     
      # Get docker tag
      - name: Compose IMAGE repo and tag Then Push
        run: |
          IMAGE_ID="$(grep "REGISTRY = " Makefile |awk '{print $3}')/$(grep "NAME = " Makefile |awk '{print $3}')"
          IMAGE_TAG=$(grep  "RELEASE_TAG = "  Makefile |awk '{print $3}')
          docker push $IMAGE_ID:$IMAGE_TAG
